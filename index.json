{
  "api/DSB.GC.GCControllerInputs.html": {
    "href": "api/DSB.GC.GCControllerInputs.html",
    "title": "Class GCControllerInputs | Gaming Couch | 0.0.1",
    "keywords": "Class GCControllerInputs Namespace DSB.GC [Serializable] public class GCControllerInputs Inheritance object GCControllerInputs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields b1 Button 1, Would match A on Xbox controller public int b1 Field Value int b2 Button 2, Would match B on Xbox controller public int b2 Field Value int b3 Button 3, Would match X on Xbox controller public int b3 Field Value int b4 Button 4, Would match Y on Xbox controller public int b4 Field Value int lx Left stick X-axis public float lx Field Value float ly Left stick Y-axis public float ly Field Value float rx Right stick X-axis public float rx Field Value float ry Right stick Y-axis public float ry Field Value float Methods CreateFromJSON(string) public static GCControllerInputs CreateFromJSON(string inputsJson) Parameters inputsJson string Returns GCControllerInputs"
  },
  "api/DSB.GC.GCPlayOptions.html": {
    "href": "api/DSB.GC.GCPlayOptions.html",
    "title": "Class GCPlayOptions | Gaming Couch | 0.0.1",
    "keywords": "Class GCPlayOptions Namespace DSB.GC [Serializable] public class GCPlayOptions Inheritance object GCPlayOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields players public GCPlayerOptions[] players Field Value GCPlayerOptions[] Methods CreateFromJSON(string) public static GCPlayOptions CreateFromJSON(string optionsJson) Parameters optionsJson string Returns GCPlayOptions"
  },
  "api/DSB.GC.GCPlayer.html": {
    "href": "api/DSB.GC.GCPlayer.html",
    "title": "Class GCPlayer | Gaming Couch | 0.0.1",
    "keywords": "Class GCPlayer Namespace DSB.GC public class GCPlayer : MonoBehaviour, IGCPlayer Inheritance object GCPlayer Implements IGCPlayer Methods GamingCouchSetup(GCPlayerSetupOptions) Do not call this in your game script. This is called by the GamingCouch script. If you want to do something custom with the options on player setup, override this method. NOTE: Don't forget to call base.GamingCouchSetup(options) when overriding. public virtual void GamingCouchSetup(GCPlayerSetupOptions options) Parameters options GCPlayerSetupOptions Options provided by the platform GetColor() Get the player color provided by GamingCouch in GCPlayer.GamingCouchSetup. public virtual Color GetColor() Returns Color GetId() Get the player id provided by GamingCouch in GCPlayer.GamingCouchSetup. public virtual int GetId() Returns int GetName() Get the player name provided by GamingCouch in GCPlayer.GamingCouchSetup. public virtual string GetName() Returns string"
  },
  "api/DSB.GC.GCPlayerColor.html": {
    "href": "api/DSB.GC.GCPlayerColor.html",
    "title": "Enum GCPlayerColor | Gaming Couch | 0.0.1",
    "keywords": "Enum GCPlayerColor Namespace DSB.GC public enum GCPlayerColor Fields blue = 0 brown = 7 cyan = 6 green = 2 pink = 5 purple = 4 red = 1 yellow = 3"
  },
  "api/DSB.GC.GCPlayerOptions.html": {
    "href": "api/DSB.GC.GCPlayerOptions.html",
    "title": "Struct GCPlayerOptions | Gaming Couch | 0.0.1",
    "keywords": "Struct GCPlayerOptions Namespace DSB.GC [Serializable] public struct GCPlayerOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields color public string color Field Value string name public string name Field Value string playerId public int playerId Field Value int"
  },
  "api/DSB.GC.GCPlayerSetupOptions.html": {
    "href": "api/DSB.GC.GCPlayerSetupOptions.html",
    "title": "Struct GCPlayerSetupOptions | Gaming Couch | 0.0.1",
    "keywords": "Struct GCPlayerSetupOptions Namespace DSB.GC public struct GCPlayerSetupOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields color public Color color Field Value Color name public string name Field Value string playerId public int playerId Field Value int"
  },
  "api/DSB.GC.GCPlayerStore-1.html": {
    "href": "api/DSB.GC.GCPlayerStore-1.html",
    "title": "Class GCPlayerStore<T> | Gaming Couch | 0.0.1",
    "keywords": "Class GCPlayerStore<T> Namespace DSB.GC public class GCPlayerStore<T> : IGCPlayerStoreOutput<T>, IGCPlayerStoreInput<T> where T : IGCPlayer Type Parameters T Inheritance object GCPlayerStore<T> Implements IGCPlayerStoreOutput<T> IGCPlayerStoreInput<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GCPlayerStore() public GCPlayerStore() Methods AddPlayer(T) public void AddPlayer(T player) Parameters player T Clear() public void Clear() GetPlayerById(int) public T GetPlayerById(int playerId) Parameters playerId int Returns T GetPlayerByIndex(int) public T GetPlayerByIndex(int index) Parameters index int Returns T GetPlayerCount() public int GetPlayerCount() Returns int GetPlayers() public List<T> GetPlayers() Returns List<T> GetPlayersEnumerable() public IEnumerable<T> GetPlayersEnumerable() Returns IEnumerable<T>"
  },
  "api/DSB.GC.GCSetupOptions.html": {
    "href": "api/DSB.GC.GCSetupOptions.html",
    "title": "Class GCSetupOptions | Gaming Couch | 0.0.1",
    "keywords": "Class GCSetupOptions Namespace DSB.GC [Serializable] public class GCSetupOptions Inheritance object GCSetupOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields gameModeId public string gameModeId Field Value string Methods CreateFromJSON(string) public static GCSetupOptions CreateFromJSON(string optionsJson) Parameters optionsJson string Returns GCSetupOptions"
  },
  "api/DSB.GC.GCStatus.html": {
    "href": "api/DSB.GC.GCStatus.html",
    "title": "Enum GCStatus | Gaming Couch | 0.0.1",
    "keywords": "Enum GCStatus Namespace DSB.GC public enum GCStatus Fields GameOver = 3 PendingSetup = 0 Playing = 2 SetupDone = 1"
  },
  "api/DSB.GC.GamingCouch.html": {
    "href": "api/DSB.GC.GamingCouch.html",
    "title": "Class GamingCouch | Gaming Couch | 0.0.1",
    "keywords": "Class GamingCouch Namespace DSB.GC public class GamingCouch : MonoBehaviour Inheritance object GamingCouch Properties Hud public GCHud Hud { get; } Property Value GCHud Instance public static GamingCouch Instance { get; } Property Value GamingCouch Status public GCStatus Status { get; } Property Value GCStatus Methods Clear() Clears players from the player store and destroys the game objects. Clears player inputs. public void Clear() ClearInputs() Clear all player inputs. public void ClearInputs() GameEnd(int[]) Inform the platform that the game has ended. public void GameEnd(int[] placementsByPlayerId) Parameters placementsByPlayerId int[] Player ID's in placement order. GetInputsByPlayerId(int) Get player inputs by player ID. public GCControllerInputs GetInputsByPlayerId(int playerId) Parameters playerId int Player ID Returns GCControllerInputs null if not available InstantiatePlayers<T>(GCPlayerStore<T>, GCPlayerOptions[]) Instantiate players by using the prefab defined in GamingCouch game object's inspector. public void InstantiatePlayers<T>(GCPlayerStore<T> playerStore, GCPlayerOptions[] playerOptions) where T : class, IGCPlayer Parameters playerStore GCPlayerStore<T> Player store to add the players to. Note: You should instantiate this store in your main Game script to be able to provide it here. Refer the integration manual. playerOptions GCPlayerOptions[] Player options to instantiate the players with. These options are available via GamingCouchPlay Type Parameters T Your game specific player class that inherits IGCPlayer or extends GCPlayer. Restart() Can be called for dev purposes to quickly restart the game in editor play mode. public void Restart() SetupDone() Call after game setup is done eg. level and other assets are loaded and the game is ready to play intro and spawn players. GamingCouchPlay will be called next by the platform. You should not start the game before GamingCouchPlay is called. public void SetupDone()"
  },
  "api/DSB.GC.Hud.GCHud.html": {
    "href": "api/DSB.GC.Hud.GCHud.html",
    "title": "Class GCHud | Gaming Couch | 0.0.1",
    "keywords": "Class GCHud Namespace DSB.GC.Hud public class GCHud Inheritance object GCHud Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Setup(GCHudConfig) public void Setup(GCHudConfig playersHudData) Parameters playersHudData GCHudConfig UpdatePlayers(GCPlayersHudData) public void UpdatePlayers(GCPlayersHudData playersHudData) Parameters playersHudData GCPlayersHudData"
  },
  "api/DSB.GC.Hud.GCHudConfig.html": {
    "href": "api/DSB.GC.Hud.GCHudConfig.html",
    "title": "Struct GCHudConfig | Gaming Couch | 0.0.1",
    "keywords": "Struct GCHudConfig Namespace DSB.GC.Hud [Serializable] public struct GCHudConfig Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields players public GCHudPlayersConfig players Field Value GCHudPlayersConfig"
  },
  "api/DSB.GC.Hud.GCHudPlayersConfig.html": {
    "href": "api/DSB.GC.Hud.GCHudPlayersConfig.html",
    "title": "Struct GCHudPlayersConfig | Gaming Couch | 0.0.1",
    "keywords": "Struct GCHudPlayersConfig Namespace DSB.GC.Hud [Serializable] public struct GCHudPlayersConfig Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields valueType public string valueType Field Value string"
  },
  "api/DSB.GC.Hud.GCPlayersHudData.html": {
    "href": "api/DSB.GC.Hud.GCPlayersHudData.html",
    "title": "Struct GCPlayersHudData | Gaming Couch | 0.0.1",
    "keywords": "Struct GCPlayersHudData Namespace DSB.GC.Hud [Serializable] public struct GCPlayersHudData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields players public GCPlayersHudDataPlayer[] players Field Value GCPlayersHudDataPlayer[]"
  },
  "api/DSB.GC.Hud.GCPlayersHudDataPlayer.html": {
    "href": "api/DSB.GC.Hud.GCPlayersHudDataPlayer.html",
    "title": "Struct GCPlayersHudDataPlayer | Gaming Couch | 0.0.1",
    "keywords": "Struct GCPlayersHudDataPlayer Namespace DSB.GC.Hud [Serializable] public struct GCPlayersHudDataPlayer Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields eliminated public bool eliminated Field Value bool placement public int placement Field Value int playerId public int playerId Field Value int value public string value Field Value string"
  },
  "api/DSB.GC.Hud.html": {
    "href": "api/DSB.GC.Hud.html",
    "title": "Namespace DSB.GC.Hud | Gaming Couch | 0.0.1",
    "keywords": "Namespace DSB.GC.Hud Classes GCHud Structs GCHudConfig GCHudPlayersConfig GCPlayersHudData GCPlayersHudDataPlayer"
  },
  "api/DSB.GC.html": {
    "href": "api/DSB.GC.html",
    "title": "Namespace DSB.GC | Gaming Couch | 0.0.1",
    "keywords": "Namespace DSB.GC Classes GCControllerInputs GCPlayOptions GCPlayer GCPlayerStore<T> GCSetupOptions GamingCouch Structs GCPlayerOptions GCPlayerSetupOptions Enums GCPlayerColor GCStatus"
  },
  "api/Global.IGCPlayer.html": {
    "href": "api/Global.IGCPlayer.html",
    "title": "Interface IGCPlayer | Gaming Couch | 0.0.1",
    "keywords": "Interface IGCPlayer Namespace Global public interface IGCPlayer Properties gameObject GameObject gameObject { get; } Property Value GameObject transform Transform transform { get; } Property Value Transform Methods GamingCouchSetup(GCPlayerSetupOptions) void GamingCouchSetup(GCPlayerSetupOptions options) Parameters options GCPlayerSetupOptions GetColor() Color GetColor() Returns Color GetId() int GetId() Returns int GetName() string GetName() Returns string"
  },
  "api/Global.IGCPlayerStoreInput-1.html": {
    "href": "api/Global.IGCPlayerStoreInput-1.html",
    "title": "Interface IGCPlayerStoreInput<T> | Gaming Couch | 0.0.1",
    "keywords": "Interface IGCPlayerStoreInput<T> Namespace Global public interface IGCPlayerStoreInput<in T> where T : IGCPlayer Type Parameters T Methods AddPlayer(T) void AddPlayer(T player) Parameters player T"
  },
  "api/Global.IGCPlayerStoreOutput-1.html": {
    "href": "api/Global.IGCPlayerStoreOutput-1.html",
    "title": "Interface IGCPlayerStoreOutput<T> | Gaming Couch | 0.0.1",
    "keywords": "Interface IGCPlayerStoreOutput<T> Namespace Global public interface IGCPlayerStoreOutput<out T> where T : IGCPlayer Type Parameters T Methods Clear() void Clear() GetPlayerById(int) T GetPlayerById(int playerId) Parameters playerId int Returns T GetPlayerByIndex(int) T GetPlayerByIndex(int index) Parameters index int Returns T GetPlayerCount() int GetPlayerCount() Returns int GetPlayersEnumerable() IEnumerable<out T> GetPlayersEnumerable() Returns IEnumerable<T>"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Gaming Couch | 0.0.1",
    "keywords": "Namespace Interfaces IGCPlayer IGCPlayerStoreInput<T> IGCPlayerStoreOutput<T>"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| Gaming Couch | 0.0.1",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "| Gaming Couch | 0.0.1",
    "keywords": ""
  },
  "index.html": {
    "href": "index.html",
    "title": "| Gaming Couch | 0.0.1",
    "keywords": "This page redirects to the manual."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| Gaming Couch | 0.0.1",
    "keywords": ""
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Hello Worlds! | Gaming Couch | 0.0.1",
    "keywords": "Hello Worlds!"
  }
}